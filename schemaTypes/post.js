const transliterate = (text) => {
    const map = {
      –∞: 'a', –±: 'b', –≤: 'v', –≥: 'h', “ë: 'g', –¥: 'd', –µ: 'e', —î: 'ye', –∂: 'zh',
      –∑: 'z', –∏: 'y', —ñ: 'i', —ó: 'yi', –π: 'y', –∫: 'k', –ª: 'l', –º: 'm', –Ω: 'n',
      –æ: 'o', –ø: 'p', —Ä: 'r', —Å: 's', —Ç: 't', —É: 'u', —Ñ: 'f', —Ö: 'kh', —Ü: 'ts',
      —á: 'ch', —à: 'sh', —â: 'shch', —å: '', —é: 'yu', —è: 'ya'
    };
  
    return text.toLowerCase().split('').map(char => map[char] || char).join('');
  };

const post = {
    name: "post",
    type: "document",
    title: "Post",
    fields: [
      {
        title: "Meta title",
        name: "meta_title",
        type: "string"
      },
      {
        title: "Title",
        name: "title",
        type: "string"
      },
      {
        title: "Publish date",
        name: "publishDate",
        type: "date"
      },
      {
        name: 'poster',
        type: 'image',
        // üëá Enables crop and hotspot tools
        options: {
          hotspot: true
        },
        // üëá Optionally append additional fields to the image object
        fields: [
          {
            name: 'caption',
            type: 'string',
          },
          {
            name: 'attribution',
            type: 'string',
          }
        ]
      },
    {
        title: 'Slug',
        name: 'slug',
        type: 'slug',
        options: {
            source: 'title',
            slugify: (input) => transliterate(input)
                                  .replace(/\s+/g, '-')
                                  .replace(/[^a-z0-9-]/g, '')
                                  .slice(0, 200)
          }
      },
      {
        title: 'Content', 
        name: 'content',
        type: 'array', 
        of: [
            {
                name: 'contentText',
                type: 'block',
                styles: [
                  {title: 'Quote', value: 'blockquote'},
                  {title: 'H4', value: 'h4'},
                ],
            },
            {
                name: 'blokPostImage',
                type: 'image',
                options: {
                  hotspot: true
                },
            }
        ]
      },
      {
        title: '–û–ø–∏—Å',
        name: 'description',
        type: 'text'
      }
    ]
  };

  export default post;